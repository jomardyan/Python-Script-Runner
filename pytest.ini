[pytest]
# Test discovery
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    -v
    --tb=short
    --disable-warnings
    
# Coverage options
[coverage:run]
source = runners
omit = 
    tests/*
    **/__pycache__/*
    **/site-packages/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

# Markers
markers =
    unit: Unit tests
    integration: Integration tests
    slow: Slow running tests
    requires_external: Tests requiring external tools (Bandit, Semgrep, etc.)
    workflow: Workflow engine tests
    tracing: OpenTelemetry tracing tests
    security: Security scanning tests
    cloud: Cloud integration tests
    benchmark: Benchmark tests
    stress: Stress tests

# Timeout
timeout = 300
timeout_method = thread

# Logging
log_cli = false
log_cli_level = INFO
